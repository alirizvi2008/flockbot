{
  "_args": [
    [
      {
        "raw": "node-wolfram",
        "scope": null,
        "escapedName": "node-wolfram",
        "name": "node-wolfram",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/vaibhav.tr/Flockathon/flockathonbot"
    ]
  ],
  "_from": "node-wolfram@latest",
  "_id": "node-wolfram@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/node-wolfram",
  "_npmUser": {
    "name": "rahatarmanahmed",
    "email": "rahatarmanahmed@gmail.com"
  },
  "_npmVersion": "1.3.2",
  "_phantomChildren": {
    "ctype": "0.5.3",
    "json-stringify-safe": "5.0.1",
    "punycode": "1.4.1"
  },
  "_requested": {
    "raw": "node-wolfram",
    "scope": null,
    "escapedName": "node-wolfram",
    "name": "node-wolfram",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-wolfram/-/node-wolfram-0.0.1.tgz",
  "_shasum": "26d79bb06cc7f4e4f9ccac596debafab9a607840",
  "_shrinkwrap": null,
  "_spec": "node-wolfram",
  "_where": "/Users/vaibhav.tr/Flockathon/flockathonbot",
  "author": {
    "name": "Rahat Ahmed",
    "email": "rahatarmanahmed@gmail.com"
  },
  "dependencies": {
    "request": "~2.29.0",
    "xml2js": "~0.4.0"
  },
  "description": "Extremely minimal WolframAlpha API wrapper for Node.js.",
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-mocha-test": "~0.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "26d79bb06cc7f4e4f9ccac596debafab9a607840",
    "tarball": "https://registry.npmjs.org/node-wolfram/-/node-wolfram-0.0.1.tgz"
  },
  "keywords": [
    "wolfram",
    "alpha",
    "wolframalpha",
    "api",
    "wrapper",
    "json"
  ],
  "license": "EPL",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "rahatarmanahmed",
      "email": "rahatarmanahmed@gmail.com"
    }
  ],
  "name": "node-wolfram",
  "optionalDependencies": {},
  "readme": "node-wolfram\r\n============\r\nnode-wolfram is a very thin wrapper for the [WolframAlpha API](http://products.wolframalpha.com/api/). It merely makes queries and returns the answer in JSON (converted from their usual XML). The conversion is done with [node-xml2js](https://github.com/Leonidas-from-XIV/node-xml2js) and nothing else is done.\r\n\r\n(Kind of a rewrite of [node-wolfram by strax](https://github.com/strax/node-wolfram). He used libxml for parsing and I didn't like that.)\r\n\r\nInstall\r\n-------\r\n`npm install node-wolfram`\r\n\r\nUsage\r\n-----\r\nHere is an example in JavaScript:\r\n```javascript\r\nvar Client = require('node-wolfram');\r\nvar Wolfram = new Client('YOUR_APPID_HERE');\r\nWolfram.query(\"2+2\", function(err, result) {\r\n\tif(err)\r\n\t\tconsole.log(err);\r\n\telse\r\n\t{\r\n\t\tfor(var a=0; a<result.queryresult.pod.length; a++)\r\n\t\t{\r\n\t\t\tvar pod = result.queryresult.pod[a];\r\n\t\t\tconsole.log(pod.$.title,\": \");\r\n\t\t\tfor(var b=0; b<pod.subpod.length; b++)\r\n\t\t\t{\r\n\t\t\t\tvar subpod = pod.subpod[b];\r\n\t\t\t\tfor(var c=0; c<subpod.plaintext.length; c++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar text = subpod.plaintext[c];\r\n\t\t\t\t\tconsole.log('\\t', text);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nHere is the equivalent in CoffeeScript:\r\n```coffeescript\r\nClient = require 'node-wolfram'\r\nWolfram = new Client('YOUR_APPID_HERE')\r\nWolfram.query \"2+2\", (err, result) ->\r\n\tif err?\r\n\t\tconsole.log err\r\n\telse\r\n\t\tfor pod in result.queryresult.pod\r\n\t\t\tconsole.log pod.$.title + \": \"\r\n\t\t\tfor subpod in pod.subpod\r\n\t\t\t\tfor text in subpod.plaintext\r\n\t\t\t\t\tconsole.log '\\t', text\r\n```\r\n\r\nBoth will output:\r\n```\r\nInput: \r\n\t 2+2\r\nResult: \r\n\t 4\r\nNumber name: \r\n\t four\r\nNumber line: \r\n\t \r\nManipulatives illustration: \r\n\t  | + |  |  =  | \r\n2 |  | 2 |  | 4\r\nTypical human computation times: \r\n\t age 6:  3.2 seconds  |  age 8:  1.8 seconds  |  age 10:  1.2 seconds  |  \r\nage 18:  0.83 seconds\r\n(ignoring concentration, repetition, variations in education, etc.)\r\n```\r\n\r\nIf the request or xml2js conversion has an error, the callback will receive that error. If the query is received, but the queryresult has an error property, then the error given to the callback will be that queryresult's error.\r\n\r\nTesting\r\n-------\r\nInstall grunt with: `npm install -g grunt grunt-cli`<br/>\r\n`APPID=YOUR_APPID_HERE grunt test`\r\n\r\nExample Response\r\n-----\r\nThis is what you get for the response if you query `2+2`. It should help show how the XML response gets converted to JSON. Attributes of tags are stored in the `$` properties.\r\n```json\r\n{\r\n    \"queryresult\": {\r\n        \"$\": {\r\n            \"success\": \"true\",\r\n            \"error\": \"false\",\r\n            \"numpods\": \"6\",\r\n            \"datatypes\": \"Math\",\r\n            \"timedout\": \"\",\r\n            \"timedoutpods\": \"\",\r\n            \"timing\": \"0.671\",\r\n            \"parsetiming\": \"0.076\",\r\n            \"parsetimedout\": \"false\",\r\n            \"recalculate\": \"\",\r\n            \"id\": \"MSPa264521a0e4dg83gd7eg200005037925gie85ce02\",\r\n            \"host\": \"http://www5a.wolframalpha.com\",\r\n            \"server\": \"29\",\r\n            \"related\": \"http://www5a.wolframalpha.com/api/v2/relatedQueries.jsp?id=MSPa264621a0e4dg83gd7eg200003a3da730hhbdgifi&s=29\",\r\n            \"version\": \"2.6\"\r\n        },\r\n        \"pod\": [{\r\n            \"$\": {\r\n                \"title\": \"Input\",\r\n                \"scanner\": \"Identity\",\r\n                \"id\": \"Input\",\r\n                \"position\": \"100\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\"2+2\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP264721a0e4dg83gd7eg20000519g66800ac2e7bg?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \"2+2\",\r\n                        \"title\": \"2+2\",\r\n                        \"width\": \"32\",\r\n                        \"height\": \"18\"\r\n                    }\r\n                }]\r\n            }]\r\n        }, {\r\n            \"$\": {\r\n                \"title\": \"Result\",\r\n                \"scanner\": \"StepByStep\",\r\n                \"id\": \"Result\",\r\n                \"position\": \"200\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\",\r\n                \"primary\": \"true\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\"4\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP264821a0e4dg83gd7eg2000033434gf1i1cfc47h?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \"4\",\r\n                        \"title\": \"4\",\r\n                        \"width\": \"8\",\r\n                        \"height\": \"18\"\r\n                    }\r\n                }]\r\n            }],\r\n            \"states\": [{\r\n                \"$\": {\r\n                    \"count\": \"1\"\r\n                },\r\n                \"state\": [{\r\n                    \"$\": {\r\n                        \"name\": \"Step-by-step solution\",\r\n                        \"input\": \"Result__Step-by-step solution\"\r\n                    }\r\n                }]\r\n            }]\r\n        }, {\r\n            \"$\": {\r\n                \"title\": \"Number name\",\r\n                \"scanner\": \"Integer\",\r\n                \"id\": \"NumberName\",\r\n                \"position\": \"300\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\"four\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP264921a0e4dg83gd7eg2000026f0i2b652da2991?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \"four\",\r\n                        \"title\": \"four\",\r\n                        \"width\": \"28\",\r\n                        \"height\": \"18\"\r\n                    }\r\n                }]\r\n            }]\r\n        }, {\r\n            \"$\": {\r\n                \"title\": \"Number line\",\r\n                \"scanner\": \"NumberLine\",\r\n                \"id\": \"NumberLine\",\r\n                \"position\": \"400\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\"\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP265021a0e4dg83gd7eg20000393ii8ihd6575ib6?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \"\",\r\n                        \"title\": \"\",\r\n                        \"width\": \"300\",\r\n                        \"height\": \"51\"\r\n                    }\r\n                }]\r\n            }]\r\n        }, {\r\n            \"$\": {\r\n                \"title\": \"Manipulatives illustration\",\r\n                \"scanner\": \"Arithmetic\",\r\n                \"id\": \"Illustration\",\r\n                \"position\": \"500\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\" | + |  |  =  | \\n2 |  | 2 |  | 4\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP265121a0e4dg83gd7eg20000596ci7a3i5064882?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \" | + |  |  =  | \\n2 |  | 2 |  | 4\",\r\n                        \"title\": \" | + |  |  =  | \\n2 |  | 2 |  | 4\",\r\n                        \"width\": \"134\",\r\n                        \"height\": \"48\"\r\n                    }\r\n                }]\r\n            }]\r\n        }, {\r\n            \"$\": {\r\n                \"title\": \"Typical human computation times\",\r\n                \"scanner\": \"Arithmetic\",\r\n                \"id\": \"TypicalHumanComputationTimes\",\r\n                \"position\": \"600\",\r\n                \"error\": \"false\",\r\n                \"numsubpods\": \"1\"\r\n            },\r\n            \"subpod\": [{\r\n                \"$\": {\r\n                    \"title\": \"\"\r\n                },\r\n                \"plaintext\": [\"age 6:  3.2 seconds  |  age 8:  1.8 seconds  |  age 10:  1.2 seconds  |  \\nage 18:  0.83 seconds\\n(ignoring concentration, repetition, variations in education, etc.)\"],\r\n                \"img\": [{\r\n                    \"$\": {\r\n                        \"src\": \"http://www5a.wolframalpha.com/Calculate/MSP/MSP265221a0e4dg83gd7eg20000647fdi2ce1ce2f8e?MSPStoreType=image/gif&s=29\",\r\n                        \"alt\": \"age 6:  3.2 seconds  |  age 8:  1.8 seconds  |  age 10:  1.2 seconds  |  \\nage 18:  0.83 seconds\\n(ignoring concentration, repetition, variations in education, etc.)\",\r\n                        \"title\": \"age 6:  3.2 seconds  |  age 8:  1.8 seconds  |  age 10:  1.2 seconds  |  \\nage 18:  0.83 seconds\\n(ignoring concentration, repetition, variations in education, etc.)\",\r\n                        \"width\": \"485\",\r\n                        \"height\": \"63\"\r\n                    }\r\n                }]\r\n            }],\r\n            \"states\": [{\r\n                \"$\": {\r\n                    \"count\": \"1\"\r\n                },\r\n                \"state\": [{\r\n                    \"$\": {\r\n                        \"name\": \"More details\",\r\n                        \"input\": \"TypicalHumanComputationTimes__More details\"\r\n                    }\r\n                }]\r\n            }]\r\n        }],\r\n        \"sources\": [{\r\n            \"$\": {\r\n                \"count\": \"1\"\r\n            },\r\n            \"source\": [{\r\n                \"$\": {\r\n                    \"url\": \"http://www.wolframalpha.com/sources/HumanComputationQuerySourceInformationNotes.html\",\r\n                    \"text\": \"Human computation query\"\r\n                }\r\n            }]\r\n        }]\r\n    }\r\n}\r\n```",
  "readmeFilename": "README.md",
  "scripts": {
    "prepublish": "grunt build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.1"
}
