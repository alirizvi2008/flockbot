var app = {
    id: null,
    secret: null
};

exports.setAppId = function (appId) {
    app.id = appId;
};

exports.setAppSecret = function (appSecret) {
    app.secret = appSecret;
};

var jwt = require('jsonwebtoken');
var verifyValidationToken = function (token, secret) {
    var decoded = null;
    try {
        decoded = jwt.verify(token, secret);
    } catch (e) {
        if (e instanceof jwt.JsonWebTokenError) {
            console.log('Got error while decoding token: ' + e);
        } else {
            throw e;
        }
    }
    return decoded;
};

var express = require('express');
var router = express.Router();
var bodyParser = require('body-parser');
router.use(bodyParser.json());

var EventEmitter = require('events');
var events = new EventEmitter();

router.use(function (request, response, next) {
    console.log('received request: ', request.method, request.url, request.headers);

    var validationToken = request.get('x-flock-validation-token');
    var validationTokenPayload = verifyValidationToken(validationToken, app.secret);
    console.log('validation token payload: ', validationTokenPayload);
    if (!validationTokenPayload) {
        console.log('Invalidation validation token');
        response.sendStatus(403);
    } else {
        console.log('received event: %j', request.body);
        var event = request.body;
        var responded = false;
        events.listeners(event.name).forEach(function (listener) {
            var body = listener(event, validationTokenPayload);
            if (!responded) {
                if (typeof body === 'function') {
                    body(function (body) {
                        response.send(body);
                    });
                    responded = true;
                } else if (typeof body === 'object') {
                    response.send(body);
                    responded = true;
                }
            }
        });
        if (!responded) {
            response.sendStatus(200);
        }
    }
});

exports.router = router;
exports.events = events;

var request = require('request');
var METHODS_BASE_URL = 'https://api.flock-staging.co/v1/'
exports.callMethod = function (name, userToken, parameters, callback) {
    parameters = parameters || true;
    var options = {
        url: METHODS_BASE_URL + name,
        method: 'POST',
        headers: {
            'x-flock-user-token': userToken
        },
        json: parameters
    };
    request(options, function (error, response, body) {
        if (!error && response.statusCode == 200) {
            console.log(body);
            console.log(typeof body);
            if (callback) {
                callback(body);
            }
        }
    });
};
